1630767279.426533 client started (54449): version 3.0a, socket /tmp//tmux-1000/default, protocol 8
1630767279.426571 on Linux 5.4.0-81-generic #91-Ubuntu SMP Thu Jul 15 19:09:17 UTC 2021; libevent 2.1.11-stable (poll)
1630767279.426597 socket is /tmp//tmux-1000/default
1630767279.426619 trying connect
1630767279.426676 add peer 0x561386892c00: 6 ((nil))
1630767279.426752 sending message 100 to peer 0x561386892c00 (4 bytes)
1630767279.426771 sending message 101 to peer 0x561386892c00 (16 bytes)
1630767279.426786 sending message 102 to peer 0x561386892c00 (11 bytes)
1630767279.426800 sending message 108 to peer 0x561386892c00 (27 bytes)
1630767279.426815 sending message 104 to peer 0x561386892c00 (0 bytes)
1630767279.426830 sending message 107 to peer 0x561386892c00 (4 bytes)
1630767279.426849 sending message 105 to peer 0x561386892c00 (31 bytes)
1630767279.426864 sending message 105 to peer 0x561386892c00 (38 bytes)
1630767279.426878 sending message 105 to peer 0x561386892c00 (18 bytes)
1630767279.426892 sending message 105 to peer 0x561386892c00 (40 bytes)
1630767279.426923 sending message 105 to peer 0x561386892c00 (108 bytes)
1630767279.426939 sending message 105 to peer 0x561386892c00 (35 bytes)
1630767279.426953 sending message 105 to peer 0x561386892c00 (54 bytes)
1630767279.426968 sending message 105 to peer 0x561386892c00 (109 bytes)
1630767279.426984 sending message 105 to peer 0x561386892c00 (15 bytes)
1630767279.426998 sending message 105 to peer 0x561386892c00 (12 bytes)
1630767279.427012 sending message 105 to peer 0x561386892c00 (14 bytes)
1630767279.427027 sending message 105 to peer 0x561386892c00 (26 bytes)
1630767279.427040 sending message 105 to peer 0x561386892c00 (85 bytes)
1630767279.427056 sending message 105 to peer 0x561386892c00 (13 bytes)
1630767279.427070 sending message 105 to peer 0x561386892c00 (12 bytes)
1630767279.427084 sending message 105 to peer 0x561386892c00 (42 bytes)
1630767279.427099 sending message 105 to peer 0x561386892c00 (19 bytes)
1630767279.427113 sending message 105 to peer 0x561386892c00 (11 bytes)
1630767279.427127 sending message 105 to peer 0x561386892c00 (40 bytes)
1630767279.427140 sending message 105 to peer 0x561386892c00 (14 bytes)
1630767279.427154 sending message 105 to peer 0x561386892c00 (53 bytes)
1630767279.427243 sending message 105 to peer 0x561386892c00 (8 bytes)
1630767279.427263 sending message 105 to peer 0x561386892c00 (31 bytes)
1630767279.427277 sending message 105 to peer 0x561386892c00 (161 bytes)
1630767279.427291 sending message 105 to peer 0x561386892c00 (11 bytes)
1630767279.427306 sending message 105 to peer 0x561386892c00 (36 bytes)
1630767279.427319 sending message 105 to peer 0x561386892c00 (17 bytes)
1630767279.427334 sending message 105 to peer 0x561386892c00 (21 bytes)
1630767279.427347 sending message 105 to peer 0x561386892c00 (19 bytes)
1630767279.427361 sending message 105 to peer 0x561386892c00 (21 bytes)
1630767279.427375 sending message 105 to peer 0x561386892c00 (23 bytes)
1630767279.427389 sending message 105 to peer 0x561386892c00 (35 bytes)
1630767279.427403 sending message 105 to peer 0x561386892c00 (22 bytes)
1630767279.427418 sending message 106 to peer 0x561386892c00 (0 bytes)
1630767279.427432 sending message 200 to peer 0x561386892c00 (4 bytes)
1630767279.427446 client loop enter
1630767279.428062 peer 0x561386892c00 message 211
1630767279.428086 client_write: sessions should be nested with care, unset $TMUX to force\n
1630767279.428616 peer 0x561386892c00 message 203
1630767279.428637 client loop exit
